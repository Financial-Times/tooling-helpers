version: 2.1

orbs:
  node: circleci/node@5.1.0

references:
  # Executor
  container_config_node: &container_config_node
    working_directory: ~/project/build
    docker:
      - image: cimg/node:<< parameters.node-version >>
    parameters:
      node-version:
        default: "18.16"
        type: string

  #
  # Workspace
  #
  workspace_root: &workspace_root ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  # Cache keys
  #
  cache_keys_root: &cache_keys_root
    keys:
      - cache-root-v1-{{ .Branch }}-{{ checksum "./package.json" }}

  # Cache creation
  #
  create_cache_root: &create_cache_root
    save_cache:
      key: cache-root-v1-{{ .Branch }}-{{ checksum "./package.json" }}
      paths:
        - ./node_modules/

  # Cache restoration
  #
  restore_cache_root: &restore_cache_root
    restore_cache:
      <<: *cache_keys_root

  # Filters
  #
  filters_only_renovate_nori: &filters_only_renovate_nori
    branches:
      only: /(^renovate-.*|^nori\/.*)/

  filters_ignore_tags_renovate_nori: &filters_ignore_tags_renovate_nori
    tags:
      ignore: /.*/
    branches:
      ignore: /(^renovate-.*|^nori\/.*)/

  filters_release_package_build: &filters_release_package_build
    tags:
      only:
        - /^[a-z\-]+-v\d+\.\d+\.\d+(\-\w+\.\d+)?$/
    branches:
      ignore: /.*/

jobs:

  build:
    <<: *container_config_node
    steps:
      - checkout
      - *restore_cache_root
      - node/install-packages
      - *create_cache_root
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  test:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Run tests
          command: npm test

  publish:
    <<: *container_config_node
    steps:
      - *attach_workspace
      - run:
          name: Configure registry.npmjs.org auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" >
            ${HOME}/.npmrc
      - run:
          name: Extract package name and semver from git tag
          command: |
            # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
            export RELEASE_SEMVER='v[0-9]{1,3}\.[0-9]{1,2}\.[0-9]{1,2}(-[a-z]+\.[0-9])?';
            export TARGET_VERSION=$(echo $CIRCLE_TAG | grep -o -E $RELEASE_SEMVER);
            export TARGET_MODULE=$(echo $CIRCLE_TAG | sed -E "s/-${RELEASE_SEMVER}//g");
            echo "export TARGET_VERSION=$TARGET_VERSION" >> $BASH_ENV;
            echo "export TARGET_MODULE=$TARGET_MODULE" >> $BASH_ENV;
            echo "Creating release ${TARGET_VERSION} for ${TARGET_MODULE}";
      - run:
          name: Bump package version
          command: npx athloi -F ${TARGET_MODULE} version ${TARGET_VERSION}
      - run:
          name: Publish package to npm
          command: npx athloi -F ${TARGET_MODULE} publish -- --access=public

workflows:

  version: 2

  build-test:
    jobs:
      - build:
          filters:
            <<: *filters_ignore_tags_renovate_nori
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.16" ]
      - test:
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.16" ]

  renovate-nori-build-test:
    jobs:
      - waiting-for-approval:
          type: approval
          filters:
            <<: *filters_only_renovate_nori
      - build:
          requires:
            - waiting-for-approval
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.16" ]
      - test:
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.16" ]

  build-test-publish:
    jobs:
      - build:
          filters:
            <<: *filters_release_package_build
          name: build-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.16" ]
      - test:
          filters:
            <<: *filters_release_package_build
          requires:
            - build-v<< matrix.node-version >>
          name: test-v<< matrix.node-version >>
          matrix:
            parameters:
              node-version: [ "16.20", "18.16" ]
      - publish:
          context: npm-publish-token
          filters:
            <<: *filters_release_package_build
          requires:
            - test-v18.16
