version: 2.1

orbs:
  node: circleci/node@4.6.0

executors:
  circleci-node:
    docker:
      - image: cimg/node:12.22
    working_directory: ~/project/build

commands:
  npm-install:
    description: "npm install without generating a package-lock file"
    steps:
      - run:
          name: "Install project dependencies"
          command: npm install --no-package-lock

references:

  #
  # Workspace
  #

  workspace_root: &workspace_root
    ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  #
  # Cache keys
  #
  cache_keys_root: &cache_keys_root
    keys:
      - cache-root-v1-{{ .Branch }}-{{ checksum "./package.json" }}

  #
  # Cache creation
  #

  create_cache_root: &create_cache_root
    save_cache:
      key: cache-root-v1-{{ .Branch }}-{{ checksum "./package.json" }}
      paths:
        - ./node_modules/

  #
  # Cache restoration
  #

  restore_cache_root: &restore_cache_root
    restore_cache:
      <<: *cache_keys_root

  #
  # Filters
  #


  filters_only_renovate_nori: &filters_only_renovate_nori
    branches:
      only: /(^renovate-.*|^nori\/.*)/

  filters_ignore_tags_renovate_nori: &filters_ignore_tags_renovate_nori
    tags:
      ignore: /.*/
    branches:
      ignore: /(^renovate-.*|^nori\/.*)/

  filters_release_package_build: &filters_release_package_build
    tags:
      only:
        - /^[a-z\-]+-v\d+\.\d+\.\d+(\-\w+\.\d+)?$/
    branches:
      ignore: /.*/

jobs:

  build:
    executor: circleci-node
    steps:
      - checkout
      - *restore_cache_root
      - node/install-npm:
          version: "7"
      - npm-install
      - *create_cache_root
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - build

  test:
    executor: circleci-node
    steps:
      - *attach_workspace
      - run:
          name: Run tests
          command: npm test

  publish:
    executor: circleci-node
    steps:
      - *attach_workspace
      - run:
          name: Configure registry.npmjs.org auth token
          command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ${HOME}/.npmrc
      - run:
          name: Extract package name and semver from git tag
          command: |
            # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
            export RELEASE_SEMVER='v[0-9]{1,3}\.[0-9]{1,2}\.[0-9]{1,2}(-[a-z]+\.[0-9])?';
            export TARGET_VERSION=$(echo $CIRCLE_TAG | grep -o -E $RELEASE_SEMVER);
            export TARGET_MODULE=$(echo $CIRCLE_TAG | sed -E "s/-${RELEASE_SEMVER}//g");
            echo "export TARGET_VERSION=$TARGET_VERSION" >> $BASH_ENV;
            echo "export TARGET_MODULE=$TARGET_MODULE" >> $BASH_ENV;
            echo "Creating release ${TARGET_VERSION} for ${TARGET_MODULE}";
      - run:
          name: Bump package version
          command: npx athloi -F ${TARGET_MODULE} version ${TARGET_VERSION}
      - run:
          name: Publish package to npm
          command: npx athloi -F ${TARGET_MODULE} publish -- --access=public

workflows:

  version: 2

  build-test:
    jobs:
      - build:
          filters:
            <<: *filters_ignore_tags_renovate_nori
      - test:
          requires:
            - build
  
  renovate-nori-build-test:
    jobs:
      - waiting-for-approval:
          type: approval
          filters:
              <<: *filters_only_renovate_nori
      - build:
          requires:
              - waiting-for-approval
      - test:
          requires:
              - build

  build-test-publish:
    jobs:
      - build:
          filters:
            <<: *filters_release_package_build
      - test:
          filters:
            <<: *filters_release_package_build
          requires:
            - build
      - publish:
          filters:
            <<: *filters_release_package_build
          requires:
            - test
